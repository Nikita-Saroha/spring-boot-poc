<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cox.cap</groupId>
	<artifactId>consul-config</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<properties>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<cucumber-junit.version>1.2.5</cucumber-junit.version>
		<spring-boot.version>1.5.4.RELEASE</spring-boot.version>
		<version.oracle-jdbc>6.0.0</version.oracle-jdbc>
		<consul.version>1.2.1.RELEASE</consul.version>
		<commons-context.version>1.0</commons-context.version>
		<commons-logging.version>1.0</commons-logging.version>
		<commons-exception.version>1.0</commons-exception.version>
		<swagger.version>2.7.0</swagger.version>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.cox.cap</groupId>
			<artifactId>commons-context</artifactId>
			<version>${commons-context.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cox.cap</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cox.cap</groupId>
			<artifactId>commons-exception</artifactId>
			<version>${commons-exception.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>oracle-jdbc</artifactId>
			<version>${version.oracle-jdbc}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1003-jdbc4</version>
		</dependency>

		<!-- unit test cases dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- end of unit test cases dependencies -->

		<!-- dependecies for cucumber; behavior-driven development -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber-junit.version}</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber-junit.version}</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber-junit.version}</version>
		</dependency>
		<!-- end of dependecies for cucumber -->
		<!-- Dependencies for consul -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
			<version>${consul.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-consul-config</artifactId>
			<version>${consul.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<!-- Dependency for Cache -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<!-- Swagger dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
					<mainClass>com.cox.cap.consulconfig</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>${project.artifactId}:${project.version}</imageName>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/resources</directory>
									<filtering>false</filtering>
									<!-- <includes>
										<include>newrelic.yml</include>
										<include>newrelic.jar</include>
									</includes> -->
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--<plugin> <groupId>org.jacoco</groupId> <artifactId>jacoco-maven-plugin</artifactId> 
				<version>0.7.9</version> <executions> <execution> <id>prepare-agent</id> 
				<goals> <goal>prepare-agent</goal> </goals> </execution> <execution> <id>report</id> 
				<phase>prepare-package</phase> <goals> <goal>report</goal> </goals> </execution> 
				<execution> <id>post-unit-test</id> <phase>test</phase> <goals> <goal>report</goal> 
				</goals> <configuration> Sets the path to the file which contains the execution 
				data. <dataFile>target/jacoco.exec</dataFile> Sets the output directory for 
				the code coverage report. <outputDirectory>target/jacoco-it</outputDirectory> 
				</configuration> </execution> <execution> <id>check</id> <goals> <goal>check</goal> 
				</goals> <configuration> <rules> <rule> <element>CLASS</element> <limits> 
				<limit> <counter>INSTRUCTION</counter> <value>COVEREDRATIO</value> <minimum>0.90</minimum> 
				</limit> </limits> </rule> </rules> </configuration> </execution> </executions> 
				<configuration> <systemPropertyVariables> <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile> 
				</systemPropertyVariables> </configuration> </plugin> -->
		</plugins>
	</build>
	<!-- <repositories> <repository> <id>cox-amp-local</id> <name>COX-AMP - 
		Local Repo</name> <url>http://repo.corp.cox.com/artifactory/cox-amp</url> 
		</repository> <repository> <id>cox-bis-local</id> <name>COX-BIS - Local Repo</name> 
		<url>https://repo.corp.cox.com/artifactory/cox-bis-virtual</url> </repository> 
		</repositories> -->
</project>